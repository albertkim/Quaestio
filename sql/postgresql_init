# NOTE: This script is not actively maintained. It will be kept around for reference purposes in case we need to use another database

CREATE TABLE SCHOOLS(
	"NAME" VARCHAR(100) NOT NULL,
	SHORTNAME VARCHAR(10) NOT NULL,
	CITY VARCHAR(50),
	COUNTRY VARCHAR(50),
	WEBSITE VARCHAR(50),
	PRIMARY KEY ("NAME")
);

INSERT INTO SCHOOLS ("NAME", SHORTNAME, CITY, COUNTRY, WEBSITE) VALUES ('University of British Columbia', 'UBC', 'Vancouver', 'Canada', 'www.ubc.ca');
INSERT INTO SCHOOLS ("NAME", SHORTNAME, CITY, COUNTRY, WEBSITE) VALUES ('Simon Fraser University', 'SFU', 'Vancouver', 'Canada', 'www.sfu.ca');

CREATE TABLE DEPARTMENTS(
	ID SERIAL NOT NULL,
	"NAME" VARCHAR(50) NOT NULL,
	SHORTNAME VARCHAR(10),
	SCHOOLNAME VARCHAR(100) NOT NULL,
	FOREIGN KEY (SCHOOLNAME) REFERENCES SCHOOLS("NAME"),
	UNIQUE ("NAME", SCHOOLNAME),
	PRIMARY KEY (ID)
);

INSERT INTO DEPARTMENTS ("NAME", SHORTNAME, SCHOOLNAME) VALUES ('Math', 'MATH', 'University of British Columbia');
INSERT INTO DEPARTMENTS ("NAME", SHORTNAME, SCHOOLNAME) VALUES ('Computer Science', 'CPSC', 'University of British Columbia');
INSERT INTO DEPARTMENTS ("NAME", SHORTNAME, SCHOOLNAME) VALUES ('Biology', 'BIOL', 'University of British Columbia');
INSERT INTO DEPARTMENTS ("NAME", SHORTNAME, SCHOOLNAME) VALUES ('Chemistry', 'CHEM', 'University of British Columbia');
INSERT INTO DEPARTMENTS ("NAME", SHORTNAME, SCHOOLNAME) VALUES ('English', 'ENGL', 'University of British Columbia');

CREATE TABLE COURSES(
	ID SERIAL NOT NULL,
	"NAME" VARCHAR(50) NOT NULL,
	SHORTNAME VARCHAR(10) NOT NULL,
	DEPARTMENTID SERIAL NOT NULL,
	FOREIGN KEY (DEPARTMENTID) REFERENCES DEPARTMENTS(ID),
	UNIQUE("NAME", DEPARTMENTID),
	PRIMARY KEY (ID)
);

INSERT INTO COURSES ("NAME", SHORTNAME, DEPARTMENTID) VALUES ('CPSC 110', 'CPSC 110', 2);
INSERT INTO COURSES ("NAME", SHORTNAME, DEPARTMENTID) VALUES ('CPSC 121', 'CPSC 121', 2);
INSERT INTO COURSES ("NAME", SHORTNAME, DEPARTMENTID) VALUES ('CPSC 210', 'CPSC 210', 2);
INSERT INTO COURSES ("NAME", SHORTNAME, DEPARTMENTID) VALUES ('BIOL 101', 'BIOL 101', 3);
INSERT INTO COURSES ("NAME", SHORTNAME, DEPARTMENTID) VALUES ('BIOL 102', 'BIOL 102', 3);
INSERT INTO COURSES ("NAME", SHORTNAME, DEPARTMENTID) VALUES ('ENGL 110', 'ENGL 110', 5);
INSERT INTO COURSES ("NAME", SHORTNAME, DEPARTMENTID) VALUES ('ENGL 121', 'ENGL 121', 5);



CREATE TABLE USERS(
	ID SERIAL NOT NULL,
	EMAIL VARCHAR(50) NOT NULL,
	"NAME" VARCHAR(50),
	PASSWORD VARCHAR(50) NOT NULL,
	DATECREATED DATE,
	UNIQUE(EMAIL),
	PRIMARY KEY (ID)
);

INSERT INTO USERS (EMAIL, "NAME", PASSWORD) VALUES ('albert275@gmail.com', 'Albert Kim', 'password');



CREATE TABLE ADMIN_FOR_COURSE(
	USERID SERIAL NOT NULL,
	COURSEID SERIAL NOT NULL,
	STARTDATE DATE,
	ENDDATE DATE,
	FOREIGN KEY (USERID) REFERENCES USERS(ID),
	FOREIGN KEY (COURSEID) REFERENCES COURSES(ID),
	PRIMARY KEY (USERID, COURSEID)
);

CREATE TABLE USER_TOOK_COURSE(
	USERID SERIAL NOT NULL,
	COURSEID SERIAL NOT NULL,
	FOREIGN KEY (USERID) REFERENCES USERS(ID),
	FOREIGN KEY (COURSEID) REFERENCES COURSES(ID),
	PRIMARY KEY (USERID, COURSEID)
);



CREATE TABLE UNITS(
	ID SERIAL NOT NULL,
	COURSEID SERIAL NOT NULL,
	CONTENT VARCHAR(50) NOT NULL,
	ISHIDDEN BOOLEAN DEFAULT FALSE,
	FOREIGN KEY (COURSEID) REFERENCES COURSES(ID),
	PRIMARY KEY (ID)
);

INSERT INTO UNITS (COURSEID, CONTENT) VALUES (1, 'Introduction');
INSERT INTO UNITS (COURSEID, CONTENT) VALUES (1, 'Theory');
INSERT INTO UNITS (COURSEID, CONTENT) VALUES (1, 'Loops');
INSERT INTO UNITS (COURSEID, CONTENT) VALUES (1, 'Recursion');

CREATE TABLE THREADS(
	ID SERIAL NOT NULL,
	USERID SERIAL NOT NULL,
	UNITID SERIAL NOT NULL,
	CONTENT VARCHAR(1000) NOT NULL,
	DATE DATE NOT NULL,
	ISDELETED BOOLEAN DEFAULT FALSE,
	ISASSIGNMENTSPECIFIC BOOLEAN DEFAULT FALSE,
	FOREIGN KEY (USERID) REFERENCES USERS(ID),
	FOREIGN KEY (UNITID) REFERENCES UNITS(ID),
	PRIMARY KEY (ID)
);

CREATE TABLE POSTS(
	ID SERIAL NOT NULL,
	USERID SERIAL NOT NULL,
	THREADID SERIAL NOT NULL,
	CONTENT VARCHAR(1000) NOT NULL,
	DATE DATE NOT NULL,
	ISDELETED BOOLEAN DEFAULT FALSE,
	FOREIGN KEY (USERID) REFERENCES USERS(ID),
	FOREIGN KEY (THREADID) REFERENCES THREADS(ID),
	PRIMARY KEY (ID)
);

CREATE TABLE CHATS(
	ID SERIAL NOT NULL,
	USERID SERIAL NOT NULL,
	POSTID SERIAL NOT NULL,
	CONTENT VARCHAR(300) NOT NULL,
	DATE DATE NOT NULL,
	FOREIGN KEY (USERID) REFERENCES USERS(ID),
	FOREIGN KEY (POSTID) REFERENCES POSTS(ID),
	PRIMARY KEY (ID)
)